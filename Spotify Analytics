# For this project, I downloaded Spotify data from Kaggle.
# Then I created a table to insert Spotify data into.
# Finally, I performed analytics on the data using SQL. 

#Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
)

#Then I inserted the Spotify Data .csv into the table.

#Next, I explored the data using the following SQL:

#1 What are the avg popularity, danceability, and energy by artist and track? 
SELECT
artist_name
,track_name
,avg(popularity)
,avg(danceability)
,avg(energy)
FROM BIT_DB.spotifydata
GROUP BY artist_name, track_name

#2 Who are the Top 10 most popular artists?
SELECT track_name, artist_name, popularity
FROM BIT_DB.spotifydata
ORDER BY popularity desc
LIMIT 10

#3 How danceable are the top 10 most popular songs?
SELECT artist_name, track_name, popularity, 
CASE 
WHEN danceability >0.7 THEN "High Danceability"
WHEN danceability >0.5 THEN "Average Danceability"
ELSE "Low Danceability"
END AS "Danceability_status"
FROM BIT_DB.Spotifydata 
ORDER BY popularity desc
LIMIT 10; 

#4 What was the most popular key used by artists?
SELECT count(key),key from BIT_DB.Spotifydata 
GROUP BY key
HAVING count(key) >= 5
ORDER BY count(key);  

#5 Which artist released the highest number of songs?
SELECT artist_name, count(artist_name) AS "Number of Release"
FROM BIT_DB.Spotifydata 
GROUP BY artist_name 
ORDER BY count(artist_name) desc; 

#6 What songs were released by BTS?
SELECT artist_name, track_name 
FROM BIT_DB.Spotifydata
WHERE artist_name = "BTS"; 
